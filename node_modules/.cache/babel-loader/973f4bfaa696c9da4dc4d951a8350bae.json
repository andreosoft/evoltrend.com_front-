{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/src/views/index/reports/doughnut1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/views/index/reports/doughnut1.vue","mtime":1571125297749},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport DoughnutChart from \"./DoughnutChart.js\";\nexport default {\n  components: {\n    DoughnutChart: DoughnutChart\n  },\n  data: function data() {\n    return {\n      loading: false,\n      data: {}\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fillData: function fillData(data) {\n      var dataset1 = {\n        backgroundColor: ['#f44336', '#4CAF50', '#FFEB3B', '#2196F3'],\n        data: []\n      };\n      var res = {\n        labels: [],\n        datasets: [dataset1]\n      };\n\n      var _iterator = _createForOfIteratorHelper(data),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var el = _step.value;\n          res.labels.push(el.x);\n          dataset1.data.push(el.y1);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res;\n    },\n    fetchData: function fetchData() {\n      this.loading = false;\n      var d = [{\n        x: 'Денис',\n        y1: 8\n      }, {\n        x: 'Ринат',\n        y1: 3\n      }, {\n        x: 'Азиз',\n        y1: 5\n      }, {\n        x: 'Виктория',\n        y1: 4\n      }];\n      this.data = this.fillData(d);\n    }\n  }\n};",{"version":3,"sources":["doughnut1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,OAAA,GAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,aAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,SAAA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA,UAAA,QAAA,GAAA;AACA,QAAA,eAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA;AAIA,UAAA,GAAA,GAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,CAAA,QAAA;AAFA,OAAA;;AALA,iDASA,IATA;AAAA;;AAAA;AASA,4DAAA;AAAA,cAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;;AAaA,aAAA,GAAA;AACA,KAfA;AAgBA,IAAA,SAAA,EAAA,qBAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,UAAA,CAAA,GAAA,CACA;AAAA,QAAA,CAAA,EAAA,OAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,CAAA,EAAA,OAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,CAAA,EAAA,MAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,CAAA,EAAA,UAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAJA,CAAA;AAMA,WAAA,IAAA,GAAA,KAAA,QAAA,CAAA,CAAA,CAAA;AACA;AAzBA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\" class=\"loading-block\">\n      <div class=\"loader\"></div>\n    </div>\n    <div style=\"margin-bottom: 3px;\">\n      <div>\n        <b>Колличество продаж по сотрудникам</b>\n      </div>\n    </div>\n    <div>\n      <doughnut-chart :chart-data=\"data\" :width=\"200\" :height=\"100\"></doughnut-chart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport DoughnutChart from \"./DoughnutChart.js\";\n\nexport default {\n  components: {\n    DoughnutChart\n  },\n  data() {\n    return {\n      loading: false,\n      data: {}\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fillData(data) {\n      let dataset1 = {\n        backgroundColor: ['#f44336', '#4CAF50', '#FFEB3B', '#2196F3'],\n        data: []\n      };\n      let res = {\n        labels: [],\n        datasets: [dataset1]\n      };\n      for (let el of data) {\n        res.labels.push(el.x);\n        dataset1.data.push(el.y1);\n      }\n      return res;\n    },\n    fetchData: function() {\n      this.loading = false;\n      let d = [\n        { x: 'Денис', y1: 8},\n        { x: 'Ринат', y1: 3},\n        { x: 'Азиз', y1: 5},\n        { x: 'Виктория', y1: 4}\n      ]\n      this.data = this.fillData(d);\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/index/reports"}]}