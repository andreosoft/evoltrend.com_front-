{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/eslint-loader/index.js??ref--13-0!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/common/validators.js","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/common/validators.js","mtime":1591092817691},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nexport default {\n  methods: {\n    validator: function validator(types, key, fields) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.$nextTick( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          var ferror, value, _iterator, _step, el;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  ferror = '';\n\n                  if (!(Array.isArray(types) && types.length > 0)) {\n                    _context.next = 39;\n                    break;\n                  }\n\n                  value = fields[key];\n                  _iterator = _createForOfIteratorHelper(types);\n                  _context.prev = 4;\n\n                  _iterator.s();\n\n                case 6:\n                  if ((_step = _iterator.n()).done) {\n                    _context.next = 31;\n                    break;\n                  }\n\n                  el = _step.value;\n\n                  if (!(el == 'req' && (value == '' || value == null))) {\n                    _context.next = 12;\n                    break;\n                  }\n\n                  ferror = 'Это поле обязательно.';\n                  _context.next = 28;\n                  break;\n\n                case 12:\n                  if (!(el == 'pass' && value && value != '' && value.length < 6)) {\n                    _context.next = 16;\n                    break;\n                  }\n\n                  ferror = 'Пароль не менее 6 символов.';\n                  _context.next = 28;\n                  break;\n\n                case 16:\n                  if (!(el == 'email' && value && value != '' && !_this.validEmail(value))) {\n                    _context.next = 20;\n                    break;\n                  }\n\n                  ferror = 'Укажите корректный адрес электронной почты.';\n                  _context.next = 28;\n                  break;\n\n                case 20:\n                  if (!(el == 'login' && !(fields['id'] > 0))) {\n                    _context.next = 27;\n                    break;\n                  }\n\n                  _context.next = 23;\n                  return _this.validLogin(value);\n\n                case 23:\n                  if (!_context.sent) {\n                    _context.next = 25;\n                    break;\n                  }\n\n                  ferror = 'Такой пользователь уже существует';\n\n                case 25:\n                  _context.next = 28;\n                  break;\n\n                case 27:\n                  if (el == 'repass' && value != fields['pass']) {\n                    ferror = 'Пароли не совпадают.';\n                  } else if (el == 'reemail' && value != fields['email']) {\n                    ferror = 'Адреса почты не совпадают';\n                  }\n\n                case 28:\n                  if (ferror != \"\") {\n                    resolve(ferror);\n                  }\n\n                case 29:\n                  _context.next = 6;\n                  break;\n\n                case 31:\n                  _context.next = 36;\n                  break;\n\n                case 33:\n                  _context.prev = 33;\n                  _context.t0 = _context[\"catch\"](4);\n\n                  _iterator.e(_context.t0);\n\n                case 36:\n                  _context.prev = 36;\n\n                  _iterator.f();\n\n                  return _context.finish(36);\n\n                case 39:\n                  resolve(ferror);\n\n                case 40:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[4, 33, 36, 39]]);\n        })));\n      });\n    },\n    validEmail: function validEmail(email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    validLogin: function validLogin(login) {\n      return new Promise(function (resolve) {\n        axios.get(api.login_exists, {\n          params: {\n            login: login\n          }\n        }).then(function (response) {\n          resolve(response.data.result);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/common/validators.js"],"names":["api","axios","methods","validator","types","key","fields","Promise","resolve","$nextTick","ferror","Array","isArray","length","value","el","validEmail","validLogin","email","re","test","login","get","login_exists","params","then","response","data","result","catch","error","console","log"],"mappings":"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","sourcesContent":["import api from \"@/config/api\";\nimport axios from \"axios\";\n\nexport default {\n  methods: {\n    validator: function (types, key, fields) {\n      return new Promise(resolve => {\n        this.$nextTick(async () => {\n          let ferror = '';\n          if (Array.isArray(types) && types.length > 0) {\n            const value = fields[key];\n            for (var el of types) {\n              if (el == 'req' && (value == '' || value == null)) {\n                ferror = 'Это поле обязательно.'\n              } else if (el == 'pass' && value && value != '' && value.length < 6) {\n                ferror = 'Пароль не менее 6 символов.'\n              } else if (el == 'email' && value && value != '' && !this.validEmail(value)) {\n                ferror = 'Укажите корректный адрес электронной почты.'\n              } else if (el == 'login' && !(fields['id'] > 0)) {\n                if (await this.validLogin(value)) {\n                  ferror = 'Такой пользователь уже существует'\n                }\n              } else if (el == 'repass' && value != fields['pass']) {\n                ferror = 'Пароли не совпадают.'\n              } else if (el == 'reemail' && value != fields['email']) {\n                ferror = 'Адреса почты не совпадают'\n              }\n              if (ferror != \"\") {\n                resolve (ferror)\n              } \n            }\n          }\n          resolve (ferror)\n        })\n      })\n    }\n    ,\n    validEmail: function (email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    validLogin: function (login) {\n      return new Promise(resolve => {\n        axios.get(api.login_exists, { params: { login: login } })\n          .then(response => {\n            resolve(response.data.result)\n          })\n          .catch(error => { console.log(error) })\n      })\n    }\n  }\n}"]}]}