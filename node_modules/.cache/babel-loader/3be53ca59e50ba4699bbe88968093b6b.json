{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/uploads/BaseImages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/uploads/BaseImages.vue","mtime":1571680727061},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  props: {\n    value: Array,\n    error: {\n      type: String,\n      default: \"\"\n    },\n    api: String,\n    url: String\n  },\n  data: function data() {\n    return {\n      id: null,\n      data: this.value,\n      files: [],\n      status: 0\n    };\n  },\n  mounted: function mounted() {\n    this.id = this._uid;\n  },\n  methods: {\n    remove: function remove(key) {\n      this.data.splice(key, 1);\n      this.$emit(\"input\", this.data);\n    },\n    upload: function upload() {\n      var _iterator = _createForOfIteratorHelper(this.$refs.file.files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var el = _step.value;\n          var e = {\n            file: el,\n            status: 0\n          };\n          this.files.push(e);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this.files),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var el = _step2.value;\n          this.upload_file(el);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    upload_file: function upload_file(file) {\n      var _this = this;\n\n      var formData = new FormData();\n      formData.append(\"file\", file.file);\n      formData.append(\"name\", file.file.name);\n      axios.post(this.api, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: function onUploadProgress(progressEvent) {\n          file.status = parseInt(progressEvent.loaded / progressEvent.total * 100);\n        }\n      }).then(function (response) {\n        if (response.data.status == \"ok\") {\n          _this.files.splice(_this.files.indexOf(file), 1);\n\n          _this.data.push(response.data.data);\n\n          _this.$emit(\"input\", _this.data);\n        }\n      }).catch(function (error) {\n        console.log(\"FAILURE!!\", error);\n      });\n    }\n  }\n};",{"version":3,"sources":["BaseImages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAFA;AAMA,IAAA,GAAA,EAAA,MANA;AAOA,IAAA,GAAA,EAAA;AAPA,GADA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,KAAA,KAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAMA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,EAAA,GAAA,KAAA,IAAA;AACA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,IAAA;AACA,KAJA;AAKA,IAAA,MAAA,EAAA,kBAAA;AAAA,iDACA,KAAA,KAAA,CAAA,IAAA,CAAA,KADA;AAAA;;AAAA;AACA,4DAAA;AAAA,cAAA,EAAA;AACA,cAAA,CAAA,GAAA;AACA,YAAA,IAAA,EAAA,EADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA;AAIA,eAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAQA,KAAA,KARA;AAAA;;AAAA;AAQA,+DAAA;AAAA,cAAA,EAAA;AACA,eAAA,WAAA,CAAA,EAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAWA,KAhBA;AAiBA,IAAA,WAAA,EAAA,qBAAA,IAAA,EAAA;AAAA;;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA,IAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,GADA,EACA,QADA,EACA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA;AADA,SADA;AAIA,QAAA,gBAAA,EAAA,0BAAA,aAAA,EAAA;AACA,UAAA,IAAA,CAAA,MAAA,GAAA,QAAA,CACA,aAAA,CAAA,MAAA,GAAA,aAAA,CAAA,KAAA,GAAA,GADA,CAAA;AAGA;AARA,OADA,EAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA;;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,IAAA;AACA;AACA,OAjBA,EAkBA,KAlBA,CAkBA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AACA,OApBA;AAqBA;AA1CA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div>\n      <div v-for=\"(el, key) in data\" :key=\"key\">\n        <div>\n        <img :src=\"url + el.file\"  style=\"width: 200px;\"/>\n        </div>\n        <button @click=\"remove(key)\">удалить</button>\n      </div>\n    </div>\n    <div>\n      <input v-on:change=\"upload()\" ref=\"file\" type=\"file\" style=\"display: none\" :id=\"id+'-in'\" multiple/>\n      <label class=\"btn btn-secondary\" :for=\"id+'-in'\">Загрузить файлы</label>\n      <div>\n        <transition name=\"fade\" v-for=\"(el,key) in files\" :key=\"key\">\n          <div class=\"file-image-el row\" style=\"align-items: center;\">\n            <div class=\"col-6\">{{el.file.name}}</div>\n            <div class=\"col-6\">\n              <div class=\"progress\">\n                <div class=\"progress-bar\" :style=\"{width: el.status + '%'}\">{{el.status}}%</div>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    value: Array,\n    error: {\n      type: String,\n      default: \"\"\n    },\n    api: String,\n    url: String\n  },\n  data() {\n    return {\n      id: null,\n      data: this.value,\n      files: [],\n      status: 0\n    };\n  },\n  mounted() {\n    this.id = this._uid;\n  },\n  methods: {\n    remove: function(key) {\n      this.data.splice(key, 1);\n      this.$emit(\"input\", this.data);\n    },\n    upload: function() {\n      for (var el of this.$refs.file.files) {\n        var e = {\n          file: el,\n          status: 0\n        };\n        this.files.push(e);\n      }\n      for (var el of this.files) {\n        this.upload_file(el);\n      }\n    },\n    upload_file: function(file) {\n      let formData = new FormData();\n      formData.append(\"file\", file.file);\n      formData.append(\"name\", file.file.name);\n      axios\n        .post(this.api, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            file.status = parseInt(\n              (progressEvent.loaded / progressEvent.total) * 100\n            );\n          }\n        })\n        .then(response => {\n          if (response.data.status == \"ok\") {\n            this.files.splice(this.files.indexOf(file), 1);\n            this.data.push(response.data.data);\n            this.$emit(\"input\", this.data);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"FAILURE!!\", error);\n        });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/widgets/uploads"}]}