{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/front/node_modules/eslint-loader/index.js??ref--13-0!/home/andrey/dev/www/evoltrend.com/front/src/mixings/table2.js","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/mixings/table2.js","mtime":1572353343384},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      data: [],\n      params: {}\n    };\n  },\n  created: function created() {\n    this.fitchAll();\n  },\n  methods: {\n    fitchAll: function fitchAll() {\n      var _this = this;\n\n      this.loading = true;\n      axios.get(this.api, {\n        params: this.params\n      }).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.data == null) {\n          _this.data = [];\n        } else {\n          _this.data = response.data.data;\n        }\n      }).catch(function (error) {\n        _this.$root.logger(error);\n      });\n    },\n    onAddElement: function onAddElement() {\n      var _this2 = this;\n\n      this.loading = true;\n      axios.post(this.api, this.fields, {\n        params: this.params\n      }).then(function (response) {\n        _this2.loading = false;\n        var fields = response.data.data;\n\n        _this2.data.push(fields);\n\n        _this2.$root.$emit(\"show-info\", {\n          text: \"Элемент добавлен\",\n          class: \"info\"\n        });\n      }).catch(function (e) {\n        _this2.$root.logger(e);\n      });\n    },\n    onChangeElement: function onChangeElement(key) {\n      var _this3 = this;\n\n      this.loading = true;\n      axios.post(this.api, this.data[key], {\n        params: this.params\n      }).then(function (response) {\n        _this3.loading = false;\n        _this3.data[key] = response.data.data;\n\n        _this3.$root.$emit(\"show-info\", {\n          text: \"Элемент обновлен\",\n          class: \"info\"\n        });\n      }).catch(function (e) {\n        _this3.$root.logger(e);\n      });\n    },\n    onRemoveElement: function onRemoveElement(key) {\n      var _this4 = this;\n\n      if (confirm(\"Вы уверены, что хотите удалить элемент?\")) {\n        this.loading = true;\n        axios({\n          method: \"delete\",\n          url: this.api,\n          data: {\n            ids: [this.data[key].id]\n          },\n          params: this.params\n        }).then(function (response) {\n          _this4.loading = false;\n\n          _this4.$root.$emit(\"show-info\", {\n            text: \"Элемент удален\",\n            class: \"alert\"\n          });\n\n          _this4.fitchAll();\n        }).catch(function (error) {\n          _this4.$root.logger(error);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/andrey/dev/www/evoltrend.com/front/src/mixings/table2.js"],"names":["axios","data","params","created","fitchAll","methods","loading","get","api","then","response","catch","error","$root","logger","onAddElement","post","fields","push","$emit","text","class","e","onChangeElement","key","onRemoveElement","confirm","method","url","ids","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  data: function() {\n    return {\n      data: [],\n      params: {}\n    };\n  },\n  created() {\n    this.fitchAll();\n  },\n  methods: {\n    fitchAll: function() {\n      this.loading = true;\n      axios\n        .get(this.api, {params: this.params})\n        .then(response => {\n          this.loading = false;\n          if (response.data.data == null) {\n            this.data = [];\n          } else {\n            this.data = response.data.data;\n          }\n        })\n        .catch(error => {\n          this.$root.logger(error);\n        });\n    },\n    onAddElement: function() {\n      this.loading = true;\n      axios\n        .post(this.api, this.fields, {params: this.params})\n        .then(response => {\n          this.loading = false;\n          let fields = response.data.data;\n          this.data.push(fields);\n          this.$root.$emit(\"show-info\", {\n            text: \"Элемент добавлен\",\n            class: \"info\"\n          });\n        })\n        .catch(e => {\n          this.$root.logger(e);\n        });\n    },\n    onChangeElement: function(key) {\n      this.loading = true;\n      axios\n        .post(this.api, this.data[key], {params: this.params})\n        .then(response => {\n          this.loading = false;\n          this.data[key] = response.data.data;\n          this.$root.$emit(\"show-info\", {\n            text: \"Элемент обновлен\",\n            class: \"info\"\n          });\n        })\n        .catch(e => {\n          this.$root.logger(e);\n        });\n    },\n    onRemoveElement: function(key) {\n      if (confirm(\"Вы уверены, что хотите удалить элемент?\")) {\n        this.loading = true;\n        axios({\n          method: \"delete\",\n          url: this.api,\n          data: { ids: [this.data[key].id] },\n          params: this.params\n        })\n          .then(response => {\n            this.loading = false;\n            this.$root.$emit(\"show-info\", {\n              text: \"Элемент удален\",\n              class: \"alert\"\n            });\n            this.fitchAll();\n          })\n          .catch(error => {\n            this.$root.logger(error);\n          });\n      }\n    }\n  }\n};"]}]}