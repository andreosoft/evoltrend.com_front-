{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/registration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/registration.vue","mtime":1590497002437},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport validators from \"@/mixins/validators\";\nvar model = {\n  Fields: function Fields() {\n    this.fields = {\n      ref: null,\n      name: null,\n      surname: null,\n      country: null,\n      phone: null,\n      email: null,\n      reemail: null,\n      pass: null,\n      repass: null\n    };\n  },\n  FieldsData: function FieldsData() {\n    this.fields = {\n      ref: '111',\n      name: 'Test',\n      surname: 'test',\n      country: 'kg',\n      phone: '123454',\n      email: 'ttt@tt.com',\n      reemail: 'ttt@tt.com',\n      pass: 'ttt@tt.com',\n      repass: 'ttt@tt.com'\n    };\n  },\n  labels: {},\n  validators: {\n    ref: [\"req\"],\n    name: [\"req\"],\n    surname: [\"req\"],\n    country: [\"req\"],\n    phone: [\"req\"],\n    email: [\"req\", \"email\", \"login\"],\n    reemail: [\"req\", \"email\", \"reemail\"],\n    pass: [\"req\", \"pass\"],\n    repass: [\"req\", \"pass\", \"repass\"]\n  }\n};\nexport default {\n  mixins: [validators],\n  components: {\n    viewCenter: viewCenter,\n    inputText: inputText\n  },\n  data: function data() {\n    return {\n      resMessage: \"На вашу почты была оправлена информация для активации вашего аккаунта. Пожалуйста, перейдите по ссылке из письма, чтобы активировать ваш аккаунт\",\n      result: false,\n      loading: false,\n      labels: model.labels,\n      fields: new model.FieldsData().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.validateAll(this.fields);\n\n              case 2:\n                if (!_context.sent) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.submit();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    submit: function submit() {\n      var _this = this;\n\n      this.loading = true;\n      axios.post(api.registration, this.fields).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.status != 'ok') {\n          _this.resMessage = \"При регистрации произошла ошибка\";\n        }\n\n        _this.result = true;\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    validateAll: function () {\n      var _validateAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(fields) {\n        var noerror, key;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                noerror = true;\n                _context2.t0 = regeneratorRuntime.keys(fields);\n\n              case 2:\n                if ((_context2.t1 = _context2.t0()).done) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                key = _context2.t1.value;\n                _context2.next = 6;\n                return this.validate(key);\n\n              case 6:\n                if (!_context2.sent) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                noerror = false;\n\n              case 8:\n                _context2.next = 2;\n                break;\n\n              case 10:\n                return _context2.abrupt(\"return\", noerror);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function validateAll(_x) {\n        return _validateAll.apply(this, arguments);\n      }\n\n      return validateAll;\n    }(),\n    validate: function () {\n      var _validate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(key) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.validator(model.validators[key], key, this.fields);\n\n              case 2:\n                return _context3.abrupt(\"return\", this.errors[key] = _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function validate(_x2) {\n        return _validate.apply(this, arguments);\n      }\n\n      return validate;\n    }()\n  }\n};",{"version":3,"sources":["registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,OAAA,SAAA;AACA,OAAA,UAAA;AACA,OAAA,GAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,qBAAA;AAEA,IAAA,KAAA,GAAA;AACA,EAAA,MADA,oBACA;AACA,SAAA,MAAA,GAAA;AACA,MAAA,GAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,IALA;AAMA,MAAA,KAAA,EAAA,IANA;AAOA,MAAA,OAAA,EAAA,IAPA;AAQA,MAAA,IAAA,EAAA,IARA;AASA,MAAA,MAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,UAdA,wBAcA;AACA,SAAA,MAAA,GAAA;AACA,MAAA,GAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,MAFA;AAGA,MAAA,OAAA,EAAA,MAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,QALA;AAMA,MAAA,KAAA,EAAA,YANA;AAOA,MAAA,OAAA,EAAA,YAPA;AAQA,MAAA,IAAA,EAAA,YARA;AASA,MAAA,MAAA,EAAA;AATA,KAAA;AAWA,GA1BA;AA2BA,EAAA,MAAA,EAAA,EA3BA;AA4BA,EAAA,UAAA,EAAA;AACA,IAAA,GAAA,EAAA,CAAA,KAAA,CADA;AAEA,IAAA,IAAA,EAAA,CAAA,KAAA,CAFA;AAGA,IAAA,OAAA,EAAA,CAAA,KAAA,CAHA;AAIA,IAAA,OAAA,EAAA,CAAA,KAAA,CAJA;AAKA,IAAA,KAAA,EAAA,CAAA,KAAA,CALA;AAMA,IAAA,KAAA,EAAA,CAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CANA;AAOA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,OAAA,EAAA,SAAA,CAPA;AAQA,IAAA,IAAA,EAAA,CAAA,KAAA,EAAA,MAAA,CARA;AASA,IAAA,MAAA,EAAA,CAAA,KAAA,EAAA,MAAA,EAAA,QAAA;AATA;AA5BA,CAAA;AAyCA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,kJADA;AAEA,MAAA,MAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,MAAA,EAAA,KAAA,CAAA,MAJA;AAKA,MAAA,MAAA,EAAA,IAAA,KAAA,CAAA,UAAA,GAAA,MALA;AAMA,MAAA,MAAA,EAAA,IAAA,KAAA,CAAA,MAAA,GAAA;AANA,KAAA;AAQA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA;AAAA,gFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,WAAA,CAAA,KAAA,MAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,qBAAA,MAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AAMA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,KAAA,CACA,IADA,CACA,GAAA,CAAA,YADA,EACA,KAAA,MADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,kCAAA;AACA;;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,OARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAXA;AAYA,KApBA;AAqBA,IAAA,WAAA;AAAA,iFAAA,kBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,IADA;AAAA,uDAEA,MAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,gBAAA,GAFA;AAAA;AAAA,uBAGA,KAAA,QAAA,CAAA,GAAA,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,gBAAA,OAAA,GAAA,KAAA;;AAJA;AAAA;AAAA;;AAAA;AAAA,kDAOA,OAPA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArBA;AA8BA,IAAA,QAAA;AAAA,8EAAA,kBAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,SAAA,CACA,KAAA,CAAA,UAAA,CAAA,GAAA,CADA,EAEA,GAFA,EAGA,KAAA,MAHA,CADA;;AAAA;AAAA,kDACA,KAAA,MAAA,CAAA,GAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9BA;AAhBA,CAAA","sourcesContent":["<template>\n  <viewCenter\n    maxWidth=\"600px\"\n    :upperName=\"$root.appName\"\n    name=\"Регистрация\"\n    :loader=\"$store.getters['auth/status'] == 'loading'\"\n  >\n    <div>\n      <div v-if=\"result\">\n        <p>{{resMessage}}</p>\n      </div>\n      <form v-else class=\"login\" @submit.prevent=\"submitForm\" method=\"post\" action>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <inputText\n              :error=\"errors.ref\"\n              @change=\"validate('ref')\"\n              v-model=\"fields.ref\"\n              label=\"Реферальный код\"\n            ></inputText>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.name\"\n              @change=\"validate('name')\"\n              v-model=\"fields.name\"\n              label=\"Имя\"\n            ></inputText>\n            <inputText\n              :error=\"errors.surname\"\n              @change=\"validate('surname')\"\n              v-model=\"fields.surname\"\n              label=\"Фамилия\"\n            ></inputText>\n            <inputText\n              :error=\"errors.country\"\n              @change=\"validate('country')\"\n              v-model=\"fields.country\"\n              label=\"Страна\"\n            ></inputText>\n            <inputText\n              :error=\"errors.phone\"\n              @change=\"validate('phone')\"\n              v-model=\"fields.phone\"\n              label=\"Телефон\"\n            ></inputText>\n          </div>\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.email\"\n              @change=\"validate('email')\"\n              v-model=\"fields.email\"\n              label=\"Email\"\n            ></inputText>\n            <inputText\n              :error=\"errors.reemail\"\n              @change=\"validate('reemail')\"\n              v-model=\"fields.reemail\"\n              label=\"Введите email повторно\"\n            ></inputText>\n            <inputText\n              :error=\"errors.pass\"\n              @change=\"validate('pass')\"\n              v-model=\"fields.pass\"\n              label=\"Пароль\"\n            ></inputText>\n            <inputText\n              :error=\"errors.repass\"\n              @change=\"validate('repass')\"\n              v-model=\"fields.repass\"\n              label=\"Введите Пароль повторно\"\n            ></inputText>\n          </div>\n        </div>\n        <div style=\"display: flex\">\n          <button\n            type=\"submit\"\n            class=\"btn btn btn-outline-success btn-lg\"\n            style=\"width: 100%\"\n          >Регистрация</button>\n        </div>\n      </form>\n    </div>\n  </viewCenter>\n</template>\n\n<script>\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport validators from \"@/mixins/validators\";\n\nconst model = {\n  Fields() {\n    this.fields = {\n      ref: null,\n      name: null,\n      surname: null,\n      country: null,\n      phone: null,\n      email: null,\n      reemail: null,\n      pass: null,\n      repass: null\n    };\n  },\n  FieldsData() {\n    this.fields = {\n      ref: '111',\n      name: 'Test',\n      surname: 'test',\n      country: 'kg',\n      phone: '123454',\n      email: 'ttt@tt.com',\n      reemail: 'ttt@tt.com',\n      pass: 'ttt@tt.com',\n      repass: 'ttt@tt.com'\n    };\n  },\n  labels: {},\n  validators: {\n    ref: [\"req\"],\n    name: [\"req\"],\n    surname: [\"req\"],\n    country: [\"req\"],\n    phone: [\"req\"],\n    email: [\"req\", \"email\", \"login\"],\n    reemail: [\"req\", \"email\", \"reemail\"],\n    pass: [\"req\", \"pass\"],\n    repass: [\"req\", \"pass\", \"repass\"]\n  }\n};\n\nexport default {\n  mixins: [validators],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      resMessage: \"На вашу почты была оправлена информация для активации вашего аккаунта. Пожалуйста, перейдите по ссылке из письма, чтобы активировать ваш аккаунт\",\n      result: false,\n      loading: false,\n      labels: model.labels,\n      fields: new model.FieldsData().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: async function() {\n      if (await this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.loading = true;\n      axios\n        .post(api.registration, this.fields)\n        .then(response => {\n          this.loading = false;\n          if (response.data.status != 'ok') {\n            this.resMessage = \"При регистрации произошла ошибка\"\n          }\n          this.result = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    validateAll: async function(fields) {\n      var noerror = true;\n      for (var key in fields) {\n        if (await this.validate(key)) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: async function(key) {\n      return (this.errors[key] = await this.validator(\n        model.validators[key],\n        key,\n        this.fields\n      ));\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/signup"}]}