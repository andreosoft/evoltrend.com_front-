{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/src/views/signup/registration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/views/signup/registration.vue","mtime":1589821934941},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport model from \"@/models/login\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport Vue from \"vue\";\nimport mixingValidator from \"@/libs/validators\";\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    viewCenter: viewCenter,\n    inputText: inputText\n  },\n  data: function data() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      if (this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.$store.dispatch(\"auth/login\", {\n        login: this.fields.login,\n        password: this.fields.password\n      }).then(function () {\n        _this.$router.push(\"/\");\n      }).catch(function (e) {\n        _this.error = e;\n      });\n    },\n    validateAll: function validateAll(fields) {\n      var noerror = true;\n\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n\n      return noerror;\n    },\n    validate: function validate(field, value) {\n      return this.errors[field] = this.validator(model.validators[field], value);\n    }\n  }\n};",{"version":3,"sources":["registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,OAAA,SAAA;AACA,OAAA,UAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,GAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,KAAA,CAAA,MAFA;AAGA,MAAA,MAAA,EAAA,IAAA,KAAA,CAAA,MAAA,GAAA,MAHA;AAIA,MAAA,MAAA,EAAA,IAAA,KAAA,CAAA,MAAA,GAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,sBAAA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA,KALA;AAMA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,YADA,EACA;AACA,QAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AAFA,OADA,EAKA,IALA,CAKA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,CAAA;AACA,OAVA;AAWA,KAlBA;AAmBA,IAAA,WAAA,EAAA,qBAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA;;AACA,WAAA,IAAA,KAAA,IAAA,MAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA;AACA;AACA;;AACA,aAAA,OAAA;AACA,KA3BA;AA4BA,IAAA,QAAA,EAAA,kBAAA,KAAA,EAAA,KAAA,EAAA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,IAAA,KAAA,SAAA,CACA,KAAA,CAAA,UAAA,CAAA,KAAA,CADA,EAEA,KAFA,CAAA;AAIA;AAjCA;AAdA,CAAA","sourcesContent":["<template>\n  <viewCenter\n    maxWidth=\"600px\"\n    :upperName=\"$root.appName\"\n    name=\"Регистрация\"\n    :loader=\"$store.getters['auth/status'] == 'loading'\"\n  >\n    <div>\n      <div v-if=\"result\">\n        <p>На вашу почты была оправлена информация для активации вашего аккаунта. Пожалуйста, перейдите по ссылке из письма, чтобы активировать ваш аккаунт</p>\n      </div>\n      <form v-else class=\"login\" @submit.prevent=\"submitForm\" method=\"post\" action>\n        <p\n          v-if=\"this.$store.getters['auth/status'] == 'error'\"\n          style=\"color: red\"\n        >{{ this.$store.getters['auth/error'] }}</p>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Реферальный код\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Имя\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Фамилия\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Страна\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Телефон\"\n            ></inputText>\n          </div>\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Email\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Введите email повторно\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Пароль\"\n            ></inputText>\n            <inputText\n              :error=\"errors.login\"\n              @change=\"validate('login', fields.login)\"\n              v-model=\"fields.login\"\n              label=\"Введите Пароль повторно\"\n            ></inputText>\n          </div>\n        </div>\n        <div style=\"display: flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn btn-outline-success btn-lg\"\n              style=\"width: 100%\"\n            >Регистрация</button>\n        </div>\n      </form>\n    </div>\n  </viewCenter>\n</template>\n\n<script>\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport model from \"@/models/login\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport Vue from \"vue\";\nimport mixingValidator from \"@/libs/validators\";\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: function() {\n      if (this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.$store\n        .dispatch(\"auth/login\", {\n          login: this.fields.login,\n          password: this.fields.password\n        })\n        .then(() => {\n          this.$router.push(\"/\");\n        })\n        .catch(e => {\n          this.error = e;\n        });\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: function(field, value) {\n      return (this.errors[field] = this.validator(\n        model.validators[field],\n        value\n      ));\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/signup"}]}