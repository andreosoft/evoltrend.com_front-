{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/src/widgets/mask/BaseMaskInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/widgets/mask/BaseMaskInput.vue","mtime":1571927448931},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { VueMaskDirective } from \"./v-mask\";\n// import Vue from \"vue\";\n// Vue.directive(\"mask\", VueMaskDirective);\nexport default {\n  props: {\n    value: String,\n    template: String,\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    error: {\n      type: String,\n      default: \"\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    req: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    class_label: {\n      type: String,\n      default: \"col-sm-4\"\n    },\n    class_input: {\n      type: String,\n      default: \"col-sm-8\"\n    }\n  },\n  data: function data() {\n    return {\n      res_placeholder: null\n    };\n  },\n  watch: {\n    value: function value(_value, previousValue) {\n      var val;\n\n      if (previousValue === null) {\n        previousValue = '';\n      }\n\n      if (_value && _value !== previousValue && _value.length > previousValue.length) {\n        val = this.format(_value, this.template);\n      } else {\n        val = _value;\n      }\n\n      var s = this.placeholder.split(\"\");\n\n      for (var i = 0; i < val.length; i++) {\n        s[i] = val[i];\n      }\n\n      this.res_placeholder = s.join(\"\");\n      this.$emit('input', val);\n    }\n  },\n  created: function created() {\n    this.res_placeholder = this.placeholder;\n  },\n  methods: {\n    format: function format(text, wholeMask) {\n      if (!wholeMask) return text;\n      var maskStartRegExp = /^([^#ANX]+)/;\n\n      if (+text.length === 1 && maskStartRegExp.test(wholeMask)) {\n        text = maskStartRegExp.exec(wholeMask)[0] + text;\n      }\n\n      var newText = \"\";\n\n      for (var maskIndex = 0; maskIndex < wholeMask.length; maskIndex += 1) {\n        var mask = wholeMask.charAt(maskIndex);\n\n        switch (mask) {\n          case \"#\":\n            break;\n\n          case \"A\":\n            break;\n\n          case \"?\":\n            break;\n\n          case \"N\":\n            break;\n\n          case \"X\":\n            break;\n\n          default:\n            text = text.replace(mask, \"\");\n        }\n      }\n\n      var i = 0;\n\n      for (var _maskIndex = 0, x = 1; x && _maskIndex < wholeMask.length; _maskIndex += 1) {\n        var char = text.charAt(i);\n\n        var _mask = wholeMask.charAt(_maskIndex);\n\n        i += 1;\n\n        switch (_mask) {\n          case \"#\":\n            /\\d/.test(char) ? newText += char : x = 0;\n            break;\n\n          case \"A\":\n            /[a-zа-я]/i.test(char) ? newText += char : x = 0;\n            break;\n\n          case \"N\":\n            /[a-zа-я0-9]/i.test(char) ? newText += char : x = 0;\n            break;\n\n          default:\n            newText += _mask;\n            i -= 1;\n            break;\n        }\n      }\n\n      return newText;\n    }\n  }\n};",{"version":3,"sources":["BaseMaskInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AAEA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,QAAA,EAAA,MAFA;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAHA;AAOA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAXA;AAeA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAfA;AAmBA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAnBA;AAuBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAvBA;AA2BA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA3BA;AA+BA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GADA;AAqCA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GAzCA;AA0CA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,eAAA,MAAA,EAAA,aAAA,EAAA;AACA,UAAA,GAAA;;AACA,UAAA,aAAA,KAAA,IAAA,EAAA;AACA,QAAA,aAAA,GAAA,EAAA;AACA;;AACA,UAAA,MAAA,IAAA,MAAA,KAAA,aAAA,IAAA,MAAA,CAAA,MAAA,GAAA,aAAA,CAAA,MAAA,EAAA;AACA,QAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MAAA,EAAA,KAAA,QAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,GAAA,GAAA,MAAA;AACA;;AAEA,UAAA,CAAA,GAAA,KAAA,WAAA,CAAA,KAAA,CAAA,EAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA;;AACA,WAAA,eAAA,GAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AAlBA,GA1CA;AA8DA,EAAA,OA9DA,qBA8DA;AACA,SAAA,eAAA,GAAA,KAAA,WAAA;AACA,GAhEA;AAiEA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,IAAA,EAAA,SAAA,EAAA;AACA,UAAA,CAAA,SAAA,EAAA,OAAA,IAAA;AAEA,UAAA,eAAA,GAAA,aAAA;;AACA,UAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,IAAA,eAAA,CAAA,IAAA,CAAA,SAAA,CAAA,EAAA;AACA,QAAA,IAAA,GAAA,eAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,IAAA,IAAA;AACA;;AAEA,UAAA,OAAA,GAAA,EAAA;;AAEA,WAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,GAAA,SAAA,CAAA,MAAA,EAAA,SAAA,IAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA;;AAEA,gBAAA,IAAA;AACA,eAAA,GAAA;AACA;;AACA,eAAA,GAAA;AACA;;AACA,eAAA,GAAA;AACA;;AACA,eAAA,GAAA;AACA;;AACA,eAAA,GAAA;AACA;;AACA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA;AAZA;AAcA;;AACA,UAAA,CAAA,GAAA,CAAA;;AACA,WACA,IAAA,UAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CADA,EAEA,CAAA,IAAA,UAAA,GAAA,SAAA,CAAA,MAFA,EAGA,UAAA,IAAA,CAHA,EAIA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;;AACA,YAAA,KAAA,GAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA;;AACA,QAAA,CAAA,IAAA,CAAA;;AACA,gBAAA,KAAA;AACA,eAAA,GAAA;AACA,iBAAA,IAAA,CAAA,IAAA,IAAA,OAAA,IAAA,IAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA,wBAAA,IAAA,CAAA,IAAA,IAAA,OAAA,IAAA,IAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA,2BAAA,IAAA,CAAA,IAAA,IAAA,OAAA,IAAA,IAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA;AACA,YAAA,OAAA,IAAA,KAAA;AACA,YAAA,CAAA,IAAA,CAAA;AACA;AAbA;AAeA;;AAEA,aAAA,OAAA;AACA;AAxDA;AAjEA,CAAA","sourcesContent":["<template>\n  <div class=\"form-group row\">\n    <label :class=\"class_label\" class=\"col-form-label text-right-sm\">\n      {{label}}\n      <span v-if=\"req\" style=\"color: #f00\">*</span>:\n    </label>\n    <div :class=\"class_input\">\n      <input tabindex=\"-1\" class=\"form-control b-select-placeholder\" :value=\"res_placeholder\" />\n      <input\n        class=\"b-select-input\"\n        :class=\"{'is-invalid': error}\"\n        :disabled=\"disabled\"\n        :value=\"value\"\n        @input=\"$emit('input', $event.target.value)\"\n        type=\"text\"\n      />\n      <template v-if=\"error\">\n        <div class=\"invalid-feedback\">{{error}}</div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\n// import { VueMaskDirective } from \"./v-mask\";\n// import Vue from \"vue\";\n\n// Vue.directive(\"mask\", VueMaskDirective);\n\nexport default {\n  props: {\n    value: String,\n    template: String,\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    error: {\n      type: String,\n      default: \"\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    req: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    class_label: {\n      type: String,\n      default: \"col-sm-4\"\n    },\n    class_input: {\n      type: String,\n      default: \"col-sm-8\"\n    }\n  },\n  data: function() {\n    return {\n      res_placeholder: null\n    };\n  },\n  watch: {\n    value: function(value, previousValue) {\n      let val;\n      if (previousValue === null) {\n        previousValue = '';\n      }\n      if (value && value !== previousValue && value.length > previousValue.length) {\n        val = this.format(value, this.template);\n      } else {\n        val = value;\n      }\n      \n      let s = this.placeholder.split(\"\");\n      for (let i = 0; i < val.length; i++) {\n        s[i] = val[i];\n      }\n      this.res_placeholder = s.join(\"\");\n      this.$emit('input', val);\n    }\n  },\n  created() {\n    this.res_placeholder = this.placeholder;\n  },\n  methods: {\n    format: function(text, wholeMask) {\n      if (!wholeMask) return text;\n\n      var maskStartRegExp = /^([^#ANX]+)/;\n      if (+text.length === 1 && maskStartRegExp.test(wholeMask)) {\n        text = maskStartRegExp.exec(wholeMask)[0] + text;\n      }\n\n      var newText = \"\";\n\n      for (var maskIndex = 0; maskIndex < wholeMask.length; maskIndex += 1) {\n        var mask = wholeMask.charAt(maskIndex);\n\n        switch (mask) {\n          case \"#\":\n            break;\n          case \"A\":\n            break;\n          case \"?\":\n            break;\n          case \"N\":\n            break;\n          case \"X\":\n            break;\n          default:\n            text = text.replace(mask, \"\");\n        }\n      }\n      var i = 0;\n      for (\n        var _maskIndex = 0, x = 1;\n        x && _maskIndex < wholeMask.length;\n        _maskIndex += 1\n      ) {\n        var char = text.charAt(i);\n        var _mask = wholeMask.charAt(_maskIndex);\n        i += 1;\n        switch (_mask) {\n          case \"#\":\n            /\\d/.test(char) ? (newText += char) : (x = 0);\n            break;\n          case \"A\":\n            /[a-zа-я]/i.test(char) ? (newText += char) : (x = 0);\n            break;\n          case \"N\":\n            /[a-zа-я0-9]/i.test(char) ? (newText += char) : (x = 0);\n            break;\n          default:\n            newText += _mask;\n            i -= 1;\n            break;\n        }\n      }\n\n      return newText;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.b-select-placeholder {\n  color: #999;\n}\n\n.b-select-input {\n  position: absolute;\n  left: 15px;\n  right: 15px;\n  top: 0;\n  margin: 0 20px 0 13px;\n  width: 100%;\n  padding: 7px 60px 6px 0px;\n  border: none;\n  background: #fff0;\n  outline: none;\n  color: #555;\n}\n</style>"],"sourceRoot":"src/widgets/mask"}]}