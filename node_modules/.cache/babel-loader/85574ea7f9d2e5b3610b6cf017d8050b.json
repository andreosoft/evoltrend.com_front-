{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/profile.vue","mtime":1591094583166},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport user_model from \"@/models/user\";\nimport api from \"@/config/api.js\";\nimport axios from \"axios\";\nimport form1 from \"@/widgets/form/form1.vue\";\nimport editMixin from \"@/widgets/view2/edit.js\";\nimport edit1 from \"@/widgets/view2/edit.vue\";\nexport default {\n  mixins: [editMixin],\n  components: {\n    form1: form1,\n    edit1: edit1\n  },\n  data: function data() {\n    return {\n      fields: this.$root.tables.profile,\n      api: api.set_profile,\n      data: {}\n    };\n  },\n  created: function created() {\n    var _iterator = _createForOfIteratorHelper(this.fields),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var el = _step.value;\n        this.$set(this.data, el.name, null);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    Object.assign(this.data, this.$store.getters[\"auth/profile\"]);\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      this.loading = true;\n      axios.post(this.api, this.data).then(function (response) {\n        _this.loading = false;\n\n        _this.$store.commit(\"auth/updateProfile\", _this.data);\n\n        _this.$root.$emit(\"show-info\", {\n          text: \"Данные записаны\",\n          class: \"info\"\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,UAAA,MAAA,eAAA;AACA,OAAA,GAAA,MAAA,iBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,0BAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,SAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA,KAAA,CAAA,MAAA,CAAA,OADA;AAEA,MAAA,GAAA,EAAA,GAAA,CAAA,WAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAaA,EAAA,OAbA,qBAaA;AAAA,+CACA,KAAA,MADA;AAAA;;AAAA;AACA,0DAAA;AAAA,YAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,GADA,EACA,KAAA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,KAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,IAAA,EAAA,iBADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAAA;AAIA,OATA,EAUA,KAVA,CAUA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAZA;AAaA;AAhBA;AAnBA,CAAA","sourcesContent":["<template>\n  <form1 :loading=\"loading\">\n    <template v-slot:title>\n      Профиль пользователя\n      <b>{{fields.login}}</b>\n    </template>\n    <template v-slot:right>\n      <div class=\"btn-block\">\n        <button @click=\"$root.goBack()\" class=\"btn btn-secondary\">Назад</button>\n        <button @click=\"submitForm()\" class=\"btn btn-primary\">Записать</button>\n      </div>\n    </template>\n    <template v-slot:body>\n      <edit1\n        v-for=\"(f, i) in fields\"\n        :key=\"i\"\n        @input=\"Object.assign(data, $event); validate(f.name)\"\n        :field=\"f\"\n        :values=\"data\"\n        :error=\"errors[f.name]\"\n      ></edit1>\n    </template>\n  </form1>\n</template>\n\n<script>\nimport user_model from \"@/models/user\";\nimport api from \"@/config/api.js\";\nimport axios from \"axios\";\nimport form1 from \"@/widgets/form/form1.vue\";\nimport editMixin from \"@/widgets/view2/edit.js\";\nimport edit1 from \"@/widgets/view2/edit.vue\";\n\nexport default {\n  mixins: [editMixin],\n  components: {\n    form1,\n    edit1\n  },\n  data: function() {\n    return {\n      fields: this.$root.tables.profile,\n      api: api.set_profile,\n      data: {}\n    };\n  },\n  created() {\n    for (let el of this.fields) {\n      this.$set(this.data, el.name, null);\n    }\n    Object.assign(this.data, this.$store.getters[\"auth/profile\"])\n  },\n  methods: {\n    submit: function() {\n      this.loading = true;\n      axios\n        .post(this.api, this.data)\n        .then(response => {\n          this.loading = false;\n          this.$store.commit(\"auth/updateProfile\", this.data);\n          this.$root.$emit(\"show-info\", {\n            text: \"Данные записаны\",\n            class: \"info\"\n          });\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/signup"}]}