{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js!/home/andrey/dev/www/evoltrend.com/front/node_modules/eslint-loader/index.js??ref--13-0!/home/andrey/dev/www/evoltrend.com/front/src/mixings/fitch_all_1.js","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/mixings/fitch_all_1.js","mtime":1566295725957},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport axios from \"axios\";\nimport func from '@/libs/func';\nimport router from \"@/config/router\";\nexport default {\n  data: function data() {\n    return {\n      api: null,\n      error: null,\n      loading: false,\n      data: [],\n      sort: {\n        key: \"\",\n        order: \"\"\n      },\n      pager: {\n        page: 0,\n        count: 0,\n        limit: 20\n      },\n      pages: {\n        current: 0,\n        page: []\n      },\n      filters: {}\n    };\n  },\n  created: function created() {\n    this.updateRoute();\n  },\n  watch: {\n    '$route': 'updateRoute'\n  },\n  methods: {\n    sortBy: function sortBy(el) {\n      if (this.sort.key == el) {\n        if (this.sort.order == 'ASC') {\n          this.sort.order = 'DESC';\n        } else {\n          this.sort.order = 'ASC';\n        }\n      } else {\n        this.sort.key = el;\n        this.sort.order = 'ASC';\n      }\n\n      this.push();\n    },\n    push: function push() {\n      var params = {\n        sort: this.sort,\n        filters: this.filters,\n        pager: this.pager\n      };\n      router.push({\n        query: {\n          q: func.url_encode(params)\n        }\n      });\n    },\n    onChangeFilter: function onChangeFilter() {\n      this.push();\n    },\n    maxPage: function maxPage() {\n      return Math.ceil(this.pager.count / this.pager.limit);\n    },\n    setPage: function setPage(item) {\n      if (item < 0) {\n        item = 0;\n      }\n\n      if (item >= this.maxPage()) {\n        item = this.maxPage() - 1;\n      }\n\n      this.pager.page = item;\n      this.push();\n    },\n    updatePages: function updatePages() {\n      var num = 6;\n      this.pages = {\n        current: this.pager.page,\n        page: []\n      };\n      var start = 0,\n          stop = this.maxPage(); // this.pages.page.push(0)\n\n      if (this.maxPage() > num) {\n        if (this.pager.page < Math.floor(num / 2)) {\n          stop = num;\n        } else if (this.maxPage() - this.pager.page < Math.floor(num / 2)) {\n          start = this.maxPage() - num;\n        } else {\n          start = this.pager.page - Math.floor(num / 2);\n          stop = this.pager.page + Math.floor(num / 2);\n        }\n      }\n\n      for (var i = start; i < stop; i++) {\n        this.pages.page.push(i);\n      }\n    },\n    updateRoute: function updateRoute() {\n      var params = {};\n\n      if (this.$route.query.q) {\n        params = func.url_decode(this.$route.query.q);\n\n        if (params.sort) {\n          this.sort = params.sort;\n        }\n\n        if (params.filters) {\n          this.filters = params.filters;\n        }\n\n        if (params.pager) {\n          this.pager = params.pager;\n        }\n      }\n\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.error = null;\n      this.loading = true;\n      axios.get(this.api, {\n        params: {\n          sort: this.sort,\n          filters: this.filters,\n          pager: this.pager\n        }\n      }).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.data == null) {\n          _this.data = [];\n        } else {\n          _this.data = response.data.data;\n          _this.pager = response.data.pager;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/andrey/dev/www/evoltrend.com/front/src/mixings/fitch_all_1.js"],"names":["axios","func","router","data","api","error","loading","sort","key","order","pager","page","count","limit","pages","current","filters","created","updateRoute","watch","methods","sortBy","el","push","params","query","q","url_encode","onChangeFilter","maxPage","Math","ceil","setPage","item","updatePages","num","start","stop","floor","i","$route","url_decode","fetchData","get","then","response","catch","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport func from '@/libs/func'\nimport router from \"@/config/router\";\n\nexport default {\n    data: function() {\n        return {\n            api: null,\n            error: null,\n            loading: false,\n            data: [],\n            sort: {\n                key: \"\",\n                order: \"\"\n            },\n            pager: {\n                page: 0,\n                count: 0,\n                limit: 20\n            },\n            pages: {\n                current: 0,\n                page: []\n            },\n            filters: {}\n        };\n    },\n    created() {\n        this.updateRoute()\n    },\n    watch: {\n        '$route': 'updateRoute',\n    },\n    methods: {\n        sortBy: function(el) {\n            if (this.sort.key == el) {\n                if (this.sort.order == 'ASC') {\n                    this.sort.order = 'DESC'\n                } else {\n                    this.sort.order = 'ASC'\n                }\n            } else {\n                this.sort.key = el\n                this.sort.order = 'ASC'\n            }\n            this.push()\n        },\n        push: function() {\n            var params = {\n                sort: this.sort,\n                filters: this.filters,\n                pager: this.pager\n            }\n            router.push({ query: { q: func.url_encode(params) } })\n        },\n        onChangeFilter: function() {\n            this.push()\n        },\n        maxPage: function() {\n            return Math.ceil(this.pager.count / this.pager.limit)\n        },\n        setPage: function(item) {\n            if (item < 0) {\n                item = 0;\n            }\n            if (item >= this.maxPage()) {\n                item = this.maxPage() - 1\n            }\n            this.pager.page = item;\n            this.push();\n        },\n        updatePages: function() {\n            let num = 6\n            this.pages = {\n                current: this.pager.page,\n                page: []\n            };\n            var start = 0,\n                stop = this.maxPage()\n                // this.pages.page.push(0)\n            if (this.maxPage() > num) {\n                if (this.pager.page < Math.floor(num / 2)) {\n                    stop = num\n                } else if (this.maxPage() - this.pager.page < Math.floor(num / 2)) {\n                    start = this.maxPage() - num\n                } else {\n                    start = this.pager.page - Math.floor(num / 2)\n                    stop = this.pager.page + Math.floor(num / 2)\n                }\n\n\n\n            }\n            for (var i = start; i < stop; i++) {\n                this.pages.page.push(i)\n            }\n        },\n        updateRoute: function() {\n            var params = {}\n            if (this.$route.query.q) {\n                params = func.url_decode(this.$route.query.q)\n                if (params.sort) {\n                    this.sort = params.sort\n                }\n                if (params.filters) {\n                    this.filters = params.filters\n                }\n                if (params.pager) {\n                    this.pager = params.pager\n                }\n            }\n            this.fetchData()\n        },\n        fetchData() {\n            this.error = null\n            this.loading = true\n            axios\n                .get(this.api, { params: { sort: this.sort, filters: this.filters, pager: this.pager } })\n                .then(response => {\n                    this.loading = false\n                    if (response.data.data == null) {\n                        this.data = []\n                    } else {\n                        this.data = response.data.data\n                        this.pager = response.data.pager\n                    }\n                })\n                .catch(error => { console.log(error) })\n        }\n    }\n};"]}]}