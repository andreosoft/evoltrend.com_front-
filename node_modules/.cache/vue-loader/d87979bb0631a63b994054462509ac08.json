{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/inputs/BaseSelectApi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/inputs/BaseSelectApi.vue","mtime":1571680597594},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\n\nexport default {\n  props: {\n    value: String,\n    label: {\n      type: String,\n      default: ''\n    },\n    api: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function () {\n    return {\n      options: []\n    }\n  },\n  created () {\n    this.fitchData()\n  },\n  methods: {\n    fitchData() {\n      axios\n      .get(this.api)\n      .then(response => {\n        if (response.data.status == 'ok') {\n          this.options = response.data.data\n        }\n      })\n      .catch(e => {console.log(e)})\n    }\n  }\n}\n",{"version":3,"sources":["BaseSelectApi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseSelectApi.vue","sourceRoot":"src/widgets/inputs","sourcesContent":["<template>\n  <div class=\"form-group row\">\n    <label class=\"col-form-label col-sm-2 text-right\">{{label}}</label>\n    <div class=\"col-sm-10\">\n      <select\n        class=\"form-control\"\n        :class=\"{'is-invalid': error}\"\n        v-on:change=\"$emit('change-model', value)\"\n        v-bind:value=\"value\"\n        v-on:input=\"$emit('input', $event.target.value)\"\n      >\n          <option v-for=\"option in options\"\n            :value=\"option.value\"\n            :selected=\"option.value == value\"\n          >\n          {{option.text}}</option>\n      </select>\n      <template v-if=\"error != null\">\n        <div class=\"invalid-feedback\">{{error}}</div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  props: {\n    value: String,\n    label: {\n      type: String,\n      default: ''\n    },\n    api: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function () {\n    return {\n      options: []\n    }\n  },\n  created () {\n    this.fitchData()\n  },\n  methods: {\n    fitchData() {\n      axios\n      .get(this.api)\n      .then(response => {\n        if (response.data.status == 'ok') {\n          this.options = response.data.data\n        }\n      })\n      .catch(e => {console.log(e)})\n    }\n  }\n}\n</script>\n"]}]}