{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/table2/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/table2/table.vue","mtime":1591089931175},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport loader from \"@/views/common/loader.vue\";\nimport col1 from \"./col.vue\";\nimport view1 from \"./view\";\nimport tableMixin from \"./table.js\";\n\nexport default {\n  mixins: [tableMixin],\n  components: {\n    loader,\n    view1,\n    col1\n  },\n  props: {\n    api: String,\n    fields: Array,\n    type: String,\n    style_table: {\n      type: Object,\n      default: () => {\n        return {\n          top: \"60px\",\n          left: \"15px\",\n          right: \"15px\",\n          \"min-width\": \"500px\"\n        };\n      }\n    },\n    style_body: {\n      type: Object,\n      default: () => {\n        return {\n          top: \"29px\"\n        };\n      }\n    }\n  },\n  data: function() {\n    return {\n      loading: false,\n      data: []\n    };\n  },\n  computed: {\n    fs: function() {\n      let res = [];\n      for (let el of this.fields) {\n        if (el.showTable) {\n          res.push(el)\n        }\n      }\n      return res\n    },\n    calcMinWidth: function() {\n      let w = 0;\n      for (let el of this.fs) {\n        w = w + parseFloat(el.width);\n      }\n      return (100 + w) + 'px';\n    },\n    getClass: function() {\n      return {\n        bordered: parseInt(this.type) == 1\n      }\n    }\n  }\n};\n",{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"table.vue","sourceRoot":"src/widgets/table2","sourcesContent":["<template>\n  <div>\n    <loader v-if=\"loading\"></loader>\n    <div class=\"flex-table fixed style-1\" :class=\"getClass\" style=\"top: 20px; right: 15px;\" :style=\"{minWidth: calcMinWidth}\">\n      <div class=\"flex-table-header\">\n        <slot name=\"header\">\n          <div class=\"flex-table-row\">\n            <col1\n              v-for=\"(el, key) in fs\"\n              :key=\"key\"\n              :sort=\"sort\"\n              :sortable=\"el.sortable\"\n              :width=\"el.width\"\n              @sort-by=\"sortBy(el.name)\"\n              :field=\"el.name\"\n            >{{el.title}}</col1>\n          </div>\n        </slot>\n      </div>\n      <div class=\"flex-table-body\" :style=\"style_body\">\n        <slot name=\"body\">\n          <div v-for=\"(el, key) in data\" :key=\"key\" class=\"flex-table-row\">\n            <view1 class=\"flex-table-col\" v-for=\"(field, i) in fs\" :style=\"{width: field.width + 'px'}\" :el=\"el\" :field=\"field\" :key=\"i\"></view1>\n          </div>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport loader from \"@/views/common/loader.vue\";\nimport col1 from \"./col.vue\";\nimport view1 from \"./view\";\nimport tableMixin from \"./table.js\";\n\nexport default {\n  mixins: [tableMixin],\n  components: {\n    loader,\n    view1,\n    col1\n  },\n  props: {\n    api: String,\n    fields: Array,\n    type: String,\n    style_table: {\n      type: Object,\n      default: () => {\n        return {\n          top: \"60px\",\n          left: \"15px\",\n          right: \"15px\",\n          \"min-width\": \"500px\"\n        };\n      }\n    },\n    style_body: {\n      type: Object,\n      default: () => {\n        return {\n          top: \"29px\"\n        };\n      }\n    }\n  },\n  data: function() {\n    return {\n      loading: false,\n      data: []\n    };\n  },\n  computed: {\n    fs: function() {\n      let res = [];\n      for (let el of this.fields) {\n        if (el.showTable) {\n          res.push(el)\n        }\n      }\n      return res\n    },\n    calcMinWidth: function() {\n      let w = 0;\n      for (let el of this.fs) {\n        w = w + parseFloat(el.width);\n      }\n      return (100 + w) + 'px';\n    },\n    getClass: function() {\n      return {\n        bordered: parseInt(this.type) == 1\n      }\n    }\n  }\n};\n</script>"]}]}