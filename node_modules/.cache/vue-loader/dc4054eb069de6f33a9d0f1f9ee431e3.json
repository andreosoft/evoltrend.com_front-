{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/src/views/signup/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/views/signup/login.vue","mtime":1589820905603},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport model from \"@/models/login\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport Vue from \"vue\";\nimport mixingValidator from \"@/libs/validators\";\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: function() {\n      if (this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.$store\n        .dispatch(\"auth/login\", {\n          login: this.fields.login,\n          password: this.fields.password\n        })\n        .then(() => {\n          this.$router.push(\"/\");\n        })\n        .catch(e => {\n          this.error = e;\n        });\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: function(field, value) {\n      return (this.errors[field] = this.validator(\n        model.validators[field],\n        value\n      ));\n    }\n  }\n};\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/views/signup","sourcesContent":["<template>\n  <viewCenter\n    :upperName=\"$root.appName\"\n    name=\"Войти\"\n    :loader=\"$store.getters['auth/status'] == 'loading'\"\n  >\n    <div>\n      <form class=\"login\" @submit.prevent=\"submitForm\" method=\"post\" action>\n        <p\n          v-if=\"this.$store.getters['auth/status'] == 'error'\"\n          style=\"color: red\"\n        >{{ this.$store.getters['auth/error'] }}</p>\n        <inputText\n          :error=\"errors.login\"\n          @change=\"validate('login', fields.login)\"\n          v-model=\"fields.login\"\n          :label=\"labels.login\"\n        ></inputText>\n        <inputText\n          :error=\"errors.password\"\n          @change=\"validate('password', fields.password)\"\n          v-model=\"fields.password\"\n          type=\"password\"\n          :label=\"labels.password\"\n        ></inputText>\n        <!-- <div class=\"text-right\">\n                <router-link :to=\"{ name: 'forget' }\">напомнить пароль</router-link>\n        </div>-->\n        <div style=\"display: flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn btn-outline-success btn-lg\"\n              style=\"width: 100%; margin: 2px 0;\"\n            >Войти</button>\n            <router-link\n              :to=\"{name: 'registration'}\"\n              class=\"btn btn btn-outline-success btn-lg\"\n              style=\"width: 100%; margin: 2px 0  2px 2px;\"\n            >Регистрация</router-link>\n        </div>\n      </form>\n    </div>\n  </viewCenter>\n</template>\n\n<script>\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport model from \"@/models/login\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport Vue from \"vue\";\nimport mixingValidator from \"@/libs/validators\";\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: function() {\n      if (this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.$store\n        .dispatch(\"auth/login\", {\n          login: this.fields.login,\n          password: this.fields.password\n        })\n        .then(() => {\n          this.$router.push(\"/\");\n        })\n        .catch(e => {\n          this.error = e;\n        });\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: function(field, value) {\n      return (this.errors[field] = this.validator(\n        model.validators[field],\n        value\n      ));\n    }\n  }\n};\n</script>\n"]}]}