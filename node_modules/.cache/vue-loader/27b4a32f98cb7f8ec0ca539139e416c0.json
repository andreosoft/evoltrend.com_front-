{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/registration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/views/signup/registration.vue","mtime":1590497002437},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport validators from \"@/mixins/validators\";\n\nconst model = {\n  Fields() {\n    this.fields = {\n      ref: null,\n      name: null,\n      surname: null,\n      country: null,\n      phone: null,\n      email: null,\n      reemail: null,\n      pass: null,\n      repass: null\n    };\n  },\n  FieldsData() {\n    this.fields = {\n      ref: '111',\n      name: 'Test',\n      surname: 'test',\n      country: 'kg',\n      phone: '123454',\n      email: 'ttt@tt.com',\n      reemail: 'ttt@tt.com',\n      pass: 'ttt@tt.com',\n      repass: 'ttt@tt.com'\n    };\n  },\n  labels: {},\n  validators: {\n    ref: [\"req\"],\n    name: [\"req\"],\n    surname: [\"req\"],\n    country: [\"req\"],\n    phone: [\"req\"],\n    email: [\"req\", \"email\", \"login\"],\n    reemail: [\"req\", \"email\", \"reemail\"],\n    pass: [\"req\", \"pass\"],\n    repass: [\"req\", \"pass\", \"repass\"]\n  }\n};\n\nexport default {\n  mixins: [validators],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      resMessage: \"На вашу почты была оправлена информация для активации вашего аккаунта. Пожалуйста, перейдите по ссылке из письма, чтобы активировать ваш аккаунт\",\n      result: false,\n      loading: false,\n      labels: model.labels,\n      fields: new model.FieldsData().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: async function() {\n      if (await this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.loading = true;\n      axios\n        .post(api.registration, this.fields)\n        .then(response => {\n          this.loading = false;\n          if (response.data.status != 'ok') {\n            this.resMessage = \"При регистрации произошла ошибка\"\n          }\n          this.result = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    validateAll: async function(fields) {\n      var noerror = true;\n      for (var key in fields) {\n        if (await this.validate(key)) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: async function(key) {\n      return (this.errors[key] = await this.validator(\n        model.validators[key],\n        key,\n        this.fields\n      ));\n    }\n  }\n};\n",{"version":3,"sources":["registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"registration.vue","sourceRoot":"src/views/signup","sourcesContent":["<template>\n  <viewCenter\n    maxWidth=\"600px\"\n    :upperName=\"$root.appName\"\n    name=\"Регистрация\"\n    :loader=\"$store.getters['auth/status'] == 'loading'\"\n  >\n    <div>\n      <div v-if=\"result\">\n        <p>{{resMessage}}</p>\n      </div>\n      <form v-else class=\"login\" @submit.prevent=\"submitForm\" method=\"post\" action>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <inputText\n              :error=\"errors.ref\"\n              @change=\"validate('ref')\"\n              v-model=\"fields.ref\"\n              label=\"Реферальный код\"\n            ></inputText>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.name\"\n              @change=\"validate('name')\"\n              v-model=\"fields.name\"\n              label=\"Имя\"\n            ></inputText>\n            <inputText\n              :error=\"errors.surname\"\n              @change=\"validate('surname')\"\n              v-model=\"fields.surname\"\n              label=\"Фамилия\"\n            ></inputText>\n            <inputText\n              :error=\"errors.country\"\n              @change=\"validate('country')\"\n              v-model=\"fields.country\"\n              label=\"Страна\"\n            ></inputText>\n            <inputText\n              :error=\"errors.phone\"\n              @change=\"validate('phone')\"\n              v-model=\"fields.phone\"\n              label=\"Телефон\"\n            ></inputText>\n          </div>\n          <div class=\"col-sm-6\">\n            <inputText\n              :error=\"errors.email\"\n              @change=\"validate('email')\"\n              v-model=\"fields.email\"\n              label=\"Email\"\n            ></inputText>\n            <inputText\n              :error=\"errors.reemail\"\n              @change=\"validate('reemail')\"\n              v-model=\"fields.reemail\"\n              label=\"Введите email повторно\"\n            ></inputText>\n            <inputText\n              :error=\"errors.pass\"\n              @change=\"validate('pass')\"\n              v-model=\"fields.pass\"\n              label=\"Пароль\"\n            ></inputText>\n            <inputText\n              :error=\"errors.repass\"\n              @change=\"validate('repass')\"\n              v-model=\"fields.repass\"\n              label=\"Введите Пароль повторно\"\n            ></inputText>\n          </div>\n        </div>\n        <div style=\"display: flex\">\n          <button\n            type=\"submit\"\n            class=\"btn btn btn-outline-success btn-lg\"\n            style=\"width: 100%\"\n          >Регистрация</button>\n        </div>\n      </form>\n    </div>\n  </viewCenter>\n</template>\n\n<script>\nimport inputText from \"./inputText.vue\";\nimport viewCenter from \"./viewCenter.vue\";\nimport api from \"@/config/api\";\nimport axios from \"axios\";\nimport validators from \"@/mixins/validators\";\n\nconst model = {\n  Fields() {\n    this.fields = {\n      ref: null,\n      name: null,\n      surname: null,\n      country: null,\n      phone: null,\n      email: null,\n      reemail: null,\n      pass: null,\n      repass: null\n    };\n  },\n  FieldsData() {\n    this.fields = {\n      ref: '111',\n      name: 'Test',\n      surname: 'test',\n      country: 'kg',\n      phone: '123454',\n      email: 'ttt@tt.com',\n      reemail: 'ttt@tt.com',\n      pass: 'ttt@tt.com',\n      repass: 'ttt@tt.com'\n    };\n  },\n  labels: {},\n  validators: {\n    ref: [\"req\"],\n    name: [\"req\"],\n    surname: [\"req\"],\n    country: [\"req\"],\n    phone: [\"req\"],\n    email: [\"req\", \"email\", \"login\"],\n    reemail: [\"req\", \"email\", \"reemail\"],\n    pass: [\"req\", \"pass\"],\n    repass: [\"req\", \"pass\", \"repass\"]\n  }\n};\n\nexport default {\n  mixins: [validators],\n  components: {\n    viewCenter,\n    inputText\n  },\n  data: function() {\n    return {\n      resMessage: \"На вашу почты была оправлена информация для активации вашего аккаунта. Пожалуйста, перейдите по ссылке из письма, чтобы активировать ваш аккаунт\",\n      result: false,\n      loading: false,\n      labels: model.labels,\n      fields: new model.FieldsData().fields,\n      errors: new model.Fields().fields\n    };\n  },\n  methods: {\n    submitForm: async function() {\n      if (await this.validateAll(this.fields)) {\n        this.submit();\n      }\n    },\n    submit: function() {\n      this.loading = true;\n      axios\n        .post(api.registration, this.fields)\n        .then(response => {\n          this.loading = false;\n          if (response.data.status != 'ok') {\n            this.resMessage = \"При регистрации произошла ошибка\"\n          }\n          this.result = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    validateAll: async function(fields) {\n      var noerror = true;\n      for (var key in fields) {\n        if (await this.validate(key)) {\n          noerror = false;\n        }\n      }\n      return noerror;\n    },\n    validate: async function(key) {\n      return (this.errors[key] = await this.validator(\n        model.validators[key],\n        key,\n        this.fields\n      ));\n    }\n  }\n};\n</script>\n"]}]}