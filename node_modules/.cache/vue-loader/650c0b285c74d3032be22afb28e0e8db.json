{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/uploads/BaseImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/src/widgets/uploads/BaseImage.vue","mtime":1591093446858},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/evoltrend.com_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport api from \"@/config/api\";\n\nexport default {\n  props: {\n    value: String,\n    label: {\n      type: String,\n      default: \"\"\n    },\n    error: {\n      type: String,\n      default: \"\"\n    },\n    api: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      download: api.download,\n      id: null,\n      image: null,\n      status: 0,\n    };\n  },\n  mounted() {\n    this.id = this._uid;\n  },\n  methods: {\n    upload: function() {\n      this.image = this.$refs.file.files[0];\n      this.status = 0;\n\n      let formData = new FormData();\n      formData.append(\"file\", this.image);\n      formData.append(\"name\", this.image.name);\n      axios\n        .post(this.api, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            this.status = parseInt(\n              (progressEvent.loaded / progressEvent.total) * 100\n            );\n          }\n        })\n        .then(response => {\n          this.$emit(\"change\", response.data.data.file);\n          this.$emit(\"input\", response.data.data.file);\n        })\n        .catch(function() {\n          console.log(\"FAILURE!!\");\n        });\n    }\n  }\n};\n",{"version":3,"sources":["BaseImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseImage.vue","sourceRoot":"src/widgets/uploads","sourcesContent":["<template>\n  <div>\n    <div v-if=\"value\">\n      <a :href=\"download + '/' + value\" target=\"_blank\">\n        <img :src=\"download + '/' + value + '?width=200&height=200'\" style=\"height: 100px\" />\n      </a>\n      <button\n        @click=\"$emit('input', ''); image = null\"\n        class=\"btn btn-secondary\"\n        style=\"margin: 5px;\"\n      >Удалить</button>\n    </div>\n    <div v-else>\n      <input v-on:change=\"upload()\" ref=\"file\" type=\"file\" style=\"display: none\" :id=\"id+'-in'\" />\n      <label class=\"btn btn-secondary\" :for=\"id+'-in'\">Загрузить</label>\n      <div>\n        <transition name=\"fade\" v-if=\"image\">\n          <div class=\"file-image-el row\" style=\"align-items: center;\">\n            <div class=\"col-6\">{{image.name}}</div>\n            <div class=\"col-6\">\n              <div class=\"progress\">\n                <div class=\"progress-bar\" :style=\"{width: status + '%'}\">{{status}}%</div>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport api from \"@/config/api\";\n\nexport default {\n  props: {\n    value: String,\n    label: {\n      type: String,\n      default: \"\"\n    },\n    error: {\n      type: String,\n      default: \"\"\n    },\n    api: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      download: api.download,\n      id: null,\n      image: null,\n      status: 0,\n    };\n  },\n  mounted() {\n    this.id = this._uid;\n  },\n  methods: {\n    upload: function() {\n      this.image = this.$refs.file.files[0];\n      this.status = 0;\n\n      let formData = new FormData();\n      formData.append(\"file\", this.image);\n      formData.append(\"name\", this.image.name);\n      axios\n        .post(this.api, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            this.status = parseInt(\n              (progressEvent.loaded / progressEvent.total) * 100\n            );\n          }\n        })\n        .then(response => {\n          this.$emit(\"change\", response.data.data.file);\n          this.$emit(\"input\", response.data.data.file);\n        })\n        .catch(function() {\n          console.log(\"FAILURE!!\");\n        });\n    }\n  }\n};\n</script>\n"]}]}