{"remainingRequest":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/dev/www/evoltrend.com/front/src/views/users/form.vue?vue&type=template&id=46238c85&","dependencies":[{"path":"/home/andrey/dev/www/evoltrend.com/front/src/views/users/form.vue","mtime":1584005660269},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/dev/www/evoltrend.com/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"form1\", {\n    attrs: {\n      breadcrumbs: [\n        { url: \"#/\", title: \"Домой\" },\n        { url: \"#/users\", title: \"Пользователи\" },\n        {\n          url: \"\",\n          title: _vm.fields.login ? _vm.fields.login : \"Новый пользователь\"\n        }\n      ],\n      loading: _vm.loading\n    },\n    scopedSlots: _vm._u([\n      {\n        key: \"title\",\n        fn: function() {\n          return [\n            _vm._v(\n              _vm._s(_vm.fields.login ? _vm.fields.login : \"Новый пользователь\")\n            )\n          ]\n        },\n        proxy: true\n      },\n      {\n        key: \"right\",\n        fn: function() {\n          return [\n            _c(\"div\", { staticClass: \"btn-block\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-secondary\",\n                  on: {\n                    click: function($event) {\n                      return _vm.$root.goBack()\n                    }\n                  }\n                },\n                [_vm._v(\"Назад\")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary\",\n                  on: {\n                    click: function($event) {\n                      return _vm.submitForm()\n                    }\n                  }\n                },\n                [_vm._v(\"Записать\")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger\",\n                  on: {\n                    click: function($event) {\n                      return _vm.remove()\n                    }\n                  }\n                },\n                [_vm._v(\"Удалить\")]\n              )\n            ])\n          ]\n        },\n        proxy: true\n      },\n      {\n        key: \"body\",\n        fn: function() {\n          return [\n            _vm.fields.id\n              ? _c(\"view1\", { attrs: { label: _vm.labels.id } }, [\n                  _vm._v(_vm._s(_vm.fields.id))\n                ])\n              : _vm._e(),\n            _vm.fields.id\n              ? _c(\"view1\", { attrs: { label: _vm.labels.login } }, [\n                  _vm._v(_vm._s(_vm.fields.login))\n                ])\n              : _c(\"b-text\", {\n                  attrs: { label: _vm.labels.login, error: _vm.errors.login },\n                  on: {\n                    \"change-model\": function($event) {\n                      return _vm.validate(\"login\", _vm.fields.login)\n                    }\n                  },\n                  model: {\n                    value: _vm.fields.login,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"login\", $$v)\n                    },\n                    expression: \"fields.login\"\n                  }\n                }),\n            _c(\"b-text\", {\n              attrs: { label: _vm.labels.name, error: _vm.errors.name },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"name\", _vm.fields.name)\n                }\n              },\n              model: {\n                value: _vm.fields.name,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"name\", $$v)\n                },\n                expression: \"fields.name\"\n              }\n            }),\n            _c(\"b-text\", {\n              attrs: { label: _vm.labels.surname, error: _vm.errors.surname },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"surname\", _vm.fields.surname)\n                }\n              },\n              model: {\n                value: _vm.fields.surname,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"surname\", $$v)\n                },\n                expression: \"fields.surname\"\n              }\n            }),\n            _c(\"b-select\", {\n              attrs: {\n                label: _vm.labels.status,\n                error: _vm.errors.status,\n                options: _vm.user_model.status\n              },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"surname\", _vm.fields.status)\n                }\n              },\n              model: {\n                value: _vm.fields.status,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"status\", $$v)\n                },\n                expression: \"fields.status\"\n              }\n            }),\n            _c(\"b-select\", {\n              attrs: {\n                label: _vm.labels.role,\n                error: _vm.errors.role,\n                options: _vm.user_model.role\n              },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"role\", _vm.fields.role)\n                }\n              },\n              model: {\n                value: _vm.fields.role,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"role\", $$v)\n                },\n                expression: \"fields.role\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.fields.role == \"1\",\n                    expression: \"fields.role == '1'\"\n                  }\n                ]\n              },\n              [\n                _c(\"b-select-api2\", {\n                  attrs: {\n                    label: _vm.labels.patient_id,\n                    error: _vm.errors.patient_id,\n                    api: _vm.api_common.select_patients\n                  },\n                  on: {\n                    \"change-model\": function($event) {\n                      return _vm.validate(\"patient_id\", _vm.fields.patient_id)\n                    }\n                  },\n                  model: {\n                    value: _vm.fields.patient_id,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"patient_id\", $$v)\n                    },\n                    expression: \"fields.patient_id\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.fields.role == \"100\",\n                    expression: \"fields.role == '100'\"\n                  }\n                ]\n              },\n              [\n                _c(\"b-select-api2\", {\n                  attrs: {\n                    label: _vm.labels.doctor_id,\n                    error: _vm.errors.doctor_id,\n                    api: _vm.api_common.select_doctors\n                  },\n                  on: {\n                    \"change-model\": function($event) {\n                      return _vm.validate(\"doctor_id\", _vm.fields.doctor_id)\n                    }\n                  },\n                  model: {\n                    value: _vm.fields.doctor_id,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"doctor_id\", $$v)\n                    },\n                    expression: \"fields.doctor_id\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\"b-text\", {\n              attrs: { label: _vm.labels.password, error: _vm.errors.password },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"password\", _vm.fields.password)\n                }\n              },\n              model: {\n                value: _vm.fields.password,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"password\", $$v)\n                },\n                expression: \"fields.password\"\n              }\n            }),\n            _c(\"b-text\", {\n              attrs: {\n                label: \"Ключ для доступа по api\",\n                error: _vm.errors.api_key\n              },\n              on: {\n                \"change-model\": function($event) {\n                  return _vm.validate(\"api_key\", _vm.fields.api_key)\n                }\n              },\n              model: {\n                value: _vm.fields.api_key,\n                callback: function($$v) {\n                  _vm.$set(_vm.fields, \"api_key\", $$v)\n                },\n                expression: \"fields.api_key\"\n              }\n            }),\n            _c(\n              \"div\",\n              { staticStyle: { margin: \"0 0 15px 0\", \"text-align\": \"right\" } },\n              [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary\",\n                    on: {\n                      click: function($event) {\n                        return _vm.gen_new_api_key()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Сгенерировать новый ключ\")]\n                )\n              ]\n            )\n          ]\n        },\n        proxy: true\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}